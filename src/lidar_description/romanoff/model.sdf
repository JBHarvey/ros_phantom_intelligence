<?xml version="1.0" ?>
<sdf version="1.5">
    <model name="Romanoff">
	<static>true</static>
      <!-- Give the base link a unique name -->
      <link name="body">
	<!-- Add a ray sensor, and give it a name -->
	<sensor type="ray" name="sensor1">

	  <!-- Position the ray sensor based on the specification. Also rotate
	       it by 90 degrees around the X-axis so that the <horizontal> rays
	       become vertical -->
	  <pose>0.03 0.045 0.05 0 -1.5707 1.59</pose>

	  <!-- Enable visualization to see the rays in the GUI -->
	  <visualize>true</visualize>

	  <!-- Set the update rate of the sensor -->
	  <update_rate>30</update_rate>
	<ray>

	  <!-- The scan element contains the horizontal and vertical beams.
	       We are leaving out the vertical beams for this tutorial. -->
	  <scan>

	    <!-- The horizontal beams -->
	    <horizontal>
	      <!-- The romanof has 8 horizontal receptors(samples) -->
	      <samples>40</samples>

	      <!-- Resolution is multiplied by samples to determine number of
		   simulated beams vs interpolated beams. See:
		   http://sdformat.org/spec?ver=1.6&elem=sensor#horizontal_resolution
		   -->
	      <resolution>1</resolution>

	      <!-- Minimum angle in radians -->
	      <min_angle>-0.26</min_angle>

	      <!-- Maximum angle in radians -->
	      <max_angle>0.26</max_angle>
	    </horizontal>
	    <vertical>
	      <!-- The romanof has 8 horizontal receptors(samples) -->
	      <samples>10</samples>

	      <!-- Resolution is multiplied by samples to determine number of
		   simulated beams vs interpolated beams. See:
		   http://sdformat.org/spec?ver=1.6&elem=sensor#horizontal_resolution
		   -->
	      <resolution>1</resolution>

	      <!-- Minimum angle in radians -->
	      <min_angle>-0.02</min_angle>

	      <!-- Maximum angle in radians -->
	      <max_angle>0.02</max_angle>
	    </vertical>

	  </scan>

	  <!-- Range defines characteristics of an individual beam -->
	  <range>

	    <!-- Minimum distance of the beam -->
	    <min>0.05</min>

	    <!-- Maximum distance of the beam -->
	    <max>70</max>

	    <!-- Linear resolution of the beam -->
	    <resolution>0.02</resolution>
	  </range>
	</ray>
          <plugin name="laser" filename="libawl16_gazebo_plugin.so">
            <topicName>/awl16</topicName>
            <frameName>phantom_intelligence</frameName>
          </plugin>
	</sensor>



        <inertial>
          <mass>1.2</mass>
          <inertia>
            <ixx>0.001087473</ixx>
            <iyy>0.001087473</iyy>
            <izz>0.001092437</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
          </inertia>
        </inertial>
        <!-- Offset the base by half the lenght of the cylinder -->
        <pose>-0.057516 -0.051757 -0.0155 1.5707 0 1.5707</pose>
    	
        <!-- The visual is mostly a copy of the collision -->
	 <visual name="base_visual">
	   <geometry>
	     <!-- The mesh tag indicates that we will use a 3D mesh as
		  a visual -->
	     <mesh>
	       <!-- The URI should refer to the 3D mesh. The "model:"
		   URI scheme indicates that the we are referencing a Gazebo
		   model. -->
	       <uri>model://romanoff/meshes/romanoff_body.stl</uri>
	     </mesh>
	   </geometry>
	  <material>
	    <ambient>1 0 0 1</ambient>
	    <diffuse>1 0 0 1</diffuse>
	    <specular>0.1 0.1 0.1 1</specular>
	    <emissive>0 0 0 0</emissive>
	  </material>
	 </visual>
      </link>

      <link name="front">
        <inertial>
          <mass>1.2</mass>
          <inertia>
            <ixx>0.001087473</ixx>
            <iyy>0.001087473</iyy>
            <izz>0.001092437</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
          </inertia>
        </inertial>
        <!-- Offset the base by half the lenght of the cylinder -->
        <pose>-0.057516 -0.051757 -0.0155 1.5707 0 1.5707</pose>

        <!-- The visual is mostly a copy of the collision -->
	 <visual name="base_visual">
	   <geometry>
	     <!-- The mesh tag indicates that we will use a 3D mesh as
		  a visual -->
	     <mesh>
	       <!-- The URI should refer to the 3D mesh. The "model:"
		   URI scheme indicates that the we are referencing a Gazebo
		   model. -->
	       <uri>model://romanoff/meshes/romanoff_front.stl</uri>
	     </mesh>
	   </geometry>
	  <material>
	    <ambient>1 0 0 1</ambient>
	    <diffuse>1 0 0 1</diffuse>
	    <specular>0.1 0.1 0.1 1</specular>
	    <emissive>0 0 0 0</emissive>
	  </material>
	 </visual>
      </link>

      <link name="back">
        <inertial>
          <mass>1.2</mass>
          <inertia>
            <ixx>0.001087473</ixx>
            <iyy>0.001087473</iyy>
            <izz>0.001092437</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
          </inertia>
        </inertial>
        <!-- Offset the base by half the lenght of the cylinder -->
        <pose>-0.057516 -0.051757 -0.0155 1.5707 0 1.5707</pose>

        <!-- The visual is mostly a copy of the collision -->
	 <visual name="base_visual">
	   <geometry>
	     <!-- The mesh tag indicates that we will use a 3D mesh as
		  a visual -->
	     <mesh>
	       <!-- The URI should refer to the 3D mesh. The "model:"
		   URI scheme indicates that the we are referencing a Gazebo
		   model. -->
	       <uri>model://romanoff/meshes/romanoff_back.stl</uri>
	     </mesh>
	   </geometry>
	  <material>
	    <ambient>0.1 0.1 0.1 1</ambient>
	    <diffuse>0.1 0.1 0.1 1</diffuse>
	    <specular>0.1 0.1 0.1 1</specular>
	    <emissive>0 0 0 0</emissive>
	  </material>
	 </visual>
      </link>

      <link name="window">
        <inertial>
          <mass>1.2</mass>
          <inertia>
            <ixx>0.001087473</ixx>
            <iyy>0.001087473</iyy>
            <izz>0.001092437</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
          </inertia>
        </inertial>
        <!-- Offset the base by half the lenght of the cylinder -->
        <pose>-0.057516 -0.051757 -0.0155 1.5707 0 1.5707</pose>

        <!-- The visual is mostly a copy of the collision -->
	 <visual name="base_visual">
	   <geometry>
	     <!-- The mesh tag indicates that we will use a 3D mesh as
		  a visual -->
	     <mesh>
	       <!-- The URI should refer to the 3D mesh. The "model:"
		   URI scheme indicates that the we are referencing a Gazebo
		   model. -->
	       <uri>model://romanoff/meshes/romanoff_window.stl</uri>
	     </mesh>
	   </geometry>
	  <material>
	    <ambient>0.1 0.1 0.1 1</ambient>
	    <diffuse>0.1 0.1 0.1 1</diffuse>
	    <specular>0.1 0.1 0.1 1</specular>
	    <emissive>0 0 0 0</emissive>
	  </material>
	 </visual>
      </link>
	<!-- Each joint must have a unique name -->
	
	<!-- Each joint must have a unique name -->
	<joint type="fixed" name="joint2">

	  <!-- Position the joint at the bottom of the top link -->
	  <pose>0 0 -0.036785 0 0 0</pose>

	  <!-- Use the base link as the parent of the joint -->
	  <parent>body</parent>

	  <!-- Use the top link as the child of the joint -->
	  <child>front</child>
	</joint>
	<!-- Each joint must have a unique name -->
	<joint type="fixed" name="joint3">

	  <!-- Position the joint at the bottom of the top link -->
	  <pose>0 0 -0.036785 0 0 0</pose>

	  <!-- Use the base link as the parent of the joint -->
	  <parent>front</parent>

	  <!-- Use the top link as the child of the joint -->
	  <child>window</child>
	</joint>
	<joint type="fixed" name="joint4">

	  <!-- Position the joint at the bottom of the top link -->
	  <pose>0 0 -0.036785 0 0 0</pose>

	  <!-- Use the base link as the parent of the joint -->
	  <parent>body</parent>

	  <!-- Use the top link as the child of the joint -->
	  <child>back</child>
	</joint>

    </model>
</sdf>
